% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{filter_master}
\alias{filter_master}
\title{Filters a Master Object}
\usage{
filter_master(master.obj, entries = NA, valid.pop = NA,
  valid.sim = NA, group.fiter = NA, inv.group.filter = F)
}
\arguments{
\item{master.obj}{The master object that should be filtered.}

\item{entries}{The entries (rows) that should be returned.
`NA` if this option is not used. Expects a numeric vector.}

\item{valid.pop}{If valid (non-`NA`) population profile entries should
be returned. `NA` if this option is not used. Expects a logical.}

\item{valid.sim}{If valid (non-`NA`) individual simulation profile entries shoudl be returned.
`NA` if this option is not used. Expects a logical.}

\item{group.fiter}{If not NA is provided a group filter is applied
(see details for further information).}

\item{inv.group.filter}{Logical value to indicate if the group filter should be inverted.

Notes on the group filter: If `NA` is set, no group filtering is performed.
  To use a group filter the function expects a named list with string vector
  values for the matching. The name of a list entry must be one of the group names
  of the master object. All group filter are combined with a logical AND.
  The values of a list entry will match exactly for the corresponding group entries
  of the master object and are combined with a logical OR.

All filters are combined with a logical AND.}
}
\value{
The filtered master object.
}
\description{
Filters a Master Object
}
\examples{

mol_1 <- molecule("Foo", MW = 100)
mol_2 <- molecule("Bar", MW = 200)
mol_3 <- molecule("Baz", MW = 300)
m <- master("master", molecules = molecule_list(mol_1, mol_2, mol_3), groups = 3)
m <- add_master_entry(m, "Pop", pop.molecules = mol_1, groups = c(NA, "AB", "B"))
m <- add_master_entry(m, sim.file = "Sim", sim.molecules = mol_2, groups = c("C", "B", "B"))
m <- add_master_entry(m, sim.file = "Sim 2", sim.molecules = mol_2, groups = c(NA, "AB", NA))
m <- add_master_entry(m, sim.file = "Sim 3",
                      sim.molecules = molecule_list(mol_1, mol_2), groups = c(NA, "AB", NA))

filter_master(m, entries = c(1,4)) # filter for rows
# filter inverse for groups
filter_master(m, group.fiter = list(Group_2 = "B", Group_3 = "B"), inv.group.filter = TRUE)
filter_master(m, valid.pop = TRUE) # only valid population profiles
filter_master(m, valid.sim = TRUE) # only valid individual simulation profiles

}
\seealso{
Other master functions: \code{\link{[.master}},
  \code{\link{add_master_entry}},
  \code{\link{bind_master}}, \code{\link{entry.default}},
  \code{\link{entry.master}}, \code{\link{entry}},
  \code{\link{groups.default}},
  \code{\link{groups.master}}, \code{\link{groups}},
  \code{\link{is_masterEntry_list}},
  \code{\link{is_masterEntry}}, \code{\link{is_master}},
  \code{\link{master}}, \code{\link{print.master}}
}
\concept{master functions}
